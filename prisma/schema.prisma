// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mysql"
  url      = "mysql://ngt_admin:Zxczxc123@ngtdb.cn8ksuou2ktn.ap-southeast-1.rds.amazonaws.com:3306/ngtdb"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                   Int               @id @default(autoincrement())
  user_name            String            @unique
  password             String?
  full_name            String?
  avatar               String?
  type                 String?
  email                String?           @unique
  user_id_social       String?
  status               String?
  active               String?
  level                String?
  created_at           DateTime          @default(now())
  updated_at           DateTime          @updatedAt
  last_login           DateTime?
  last_logout          DateTime?
  current_used_product Int?
  has_password         Boolean           @default(true)
  UserDashboard        UserDashboard[]
  UserPlayHistory      UserPlayHistory[]

  @@map("user")
}

model Friendship {
  id              Int      @id @default(autoincrement())
  user_id         Int
  user_name       String?
  friend_id       Int
  friend_name     String?
  user_fullName   String?
  user_avatar     String?
  friend_fullName String?
  friend_avatar   String?
  isAccept        Boolean
  created_at      DateTime @default(now())

  @@map("friendship")
}

model Messenger {
  id         Int      @id @default(autoincrement())
  user_id    Int
  friend_id  Int
  message    String?  @db.LongText
  image      String?
  isRead     Boolean  @default(false)
  created_at DateTime @default(now())

  @@map("messenger")
}

model ServerMessenger {
  id         Int      @id @default(autoincrement())
  server     Server   @relation(fields: [server_id], references: [id])
  server_id  Int
  user_id    Int
  message    String?  @db.LongText
  image      String?
  created_at DateTime @default(now())

  @@map("server_messenger")
}

model Server {
  id               Int               @id @default(autoincrement())
  server_name      String?
  server_avatar    String?           @db.LongText
  server_messenger ServerMessenger[]
  created_at       DateTime          @default(now())

  @@map("server")
}

model UserPlayHistory {
  id         Int      @id @default(autoincrement())
  user       User     @relation(fields: [user_id], references: [id])
  user_id    Int
  game       Game     @relation(fields: [game_id], references: [id])
  game_id    Int
  score      Int
  created_at DateTime @default(now())

  @@map("user_play_history")
}

model UserDashboard {
  id          Int      @id @default(autoincrement())
  user        User     @relation(fields: [user_id], references: [id])
  user_id     Int
  user_name   String   @default("Test01")
  game        Game     @relation(fields: [game_id], references: [id])
  game_id     Int
  score       Float
  game_played Int
  updated_at  DateTime @updatedAt
  created_at  DateTime @default(now())

  @@map("user_dashboard")
}

model Game {
  id              Int               @id @default(autoincrement())
  game_name       String
  created_at      DateTime          @default(now())
  UserDashboard   UserDashboard[]
  UserPlayHistory UserPlayHistory[]

  @@map("game")
}
